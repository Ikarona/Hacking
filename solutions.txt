1 Task:
1) Открыть "challenge".
2) F12 
3) Найти <form>, открыть, удалить input disabled ='' в обеих строчках
4) Сохранить изменения, в поле ввода ввести что-то-> нажать member access -> получить код
2 Task:
1) Открыть "challenge".
2) ввод логина и пароля, нажатие на кнопку логин -> обработка происходит на стороне клиента, 
в коде элемента можно увидеть, что кнопка вызывает функцию Login(). В браузерном отладчике можно найти эту функцию login.js. В ней простая проверка, ответ функции намекает использовать пароль для прохождения задания.
3 Task:
Аналогично нас встречает всплывающее окно,просит ввода пароля. после ввода не перезагружается.
Ищем функцию через код страницы прямо в <head> встроена функция.
4 Task:
Видим кнопку login. Нажимаем, вводим логин-> пароль, понимаем, что обработка просиходит на стороне клиента. Просматриваем код, видим в <head> функция login.js -> в отладчике просмтриваем её, там TheLists, который далее разбивается в цикле на login и password, и при if() ответ использовать пароль как ответ.
5 Task:
Опять js функция, в проверке которой есть pass= '[%,0-9]' -по виду urlencode -> декодируем.
получаем подходящий пароль.
6 Task:
Заходим, видим ничего. Смотрим код элемента, там JS, объявляется переменная pass, через разные функции и похоже на urlencode, декодим 2 раза(почему-то моемк декодеру не хватило одного. Открываем консоль, создаем переменную pass = тому что декодировано, выводим её - пароль.
7 Task:
Входим - окошко - вводим пароль - ничего, находим код записанный зачем-то очень странным способом. Java code beautifier - получаем что-то более читаемое. Вводим построчно.
Заметно, что одна строка это задание функции, а сдедующая, это вызов I(I()) вводим только I - получаем пароль в if.
8 Task:
Предлагает ввести пароль. читаем код
под (вроде xed кодиирование)dechiffre("55,56,54,79,115,69,114,116,107,49,50")
Почитав код js скрипта, понятно, что он переводит строку которая у него вписана и имеет значение, что ему ввести -> вручную переводим строку, которая выше в аски и получаем ответ.

Task:

